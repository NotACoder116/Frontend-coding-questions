// Stack class
class Stack {
    push(element) {
        this.items.push(element);
    }
    
    pop() {
        if (this.items.length == 0)
            return "Underflow";
        return this.items.pop();
    }
    
    // peek function
    peek() {
        // return the top most element from the stack
        // but does'nt delete it.
        return this.items[this.items.length - 1];
    }
    
    // isEmpty function
    isEmpty() {
        // return true if stack is empty
        return this.items.length == 0;
    }
    
    // printStack function
    print() {
        var str = "";
        for (var i = 0; i < this.items.length; i++)
            str += this.items[i] + " ";
        return str;
    }
    
    size() {
        return this.items.length;
    }
    
	// Array is used to implement stack
	constructor()
	{
		this.items = [];
	}

	// Functions to be implemented
// 	push(item);
// 	pop();
	// peek()
	// isEmpty()
	// printStack()
}

var stack = new Stack();
var arr = [2, 5, 9, 3, 1, 12, 6, 8, 7];

function nextGreaterElementToTheRight(arr) {
    let span = [];
    span[0] = 1;
    stack.push(0);
    
    for(let i=1;i<arr.length;i++) {
        while(stack.size() > 0 && arr[i] > arr[stack.peek()]) {
            stack.pop();
        }
        
        if(stack.size() == 0) {
            span[i] = i+1;
        }
        else {
            span[i] = i -stack.peek();
        }
        
        stack.push(i);
    }
    return span;
}

console.log(nextGreaterElementToTheRight(arr));







